name: Build and Upload Wheels

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build ${{ matrix.os }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: pip

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Build settings
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_SKIP: "*-win32* *_i686* *musllinux*"
          CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          # C++20 settings (simplified)
          CMAKE_ARGS: "-DCMAKE_CXX_STANDARD=20 -DCMAKE_CXX_STANDARD_REQUIRED=ON"
          # Build dependencies 
          CIBW_BEFORE_BUILD: pip install -U pip wheel scikit-build-core>=0.4.3 pybind11>=2.6.0
          CIBW_TEST_COMMAND: python -c "from VegasAfterglow import ObsData, Setups, Fitter, ParamDef, Scale; print('OK')"
        with:
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/
          if-no-files-found: error

  publish:
    name: Publish to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ">=3.8"
      
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: wheelhouse/

      - name: Gather wheels
        run: |
          mkdir -p dist
          find wheelhouse -type f -name '*.whl' -exec mv '{}' dist/ \;

      - name: Build source distribution
        run: |
          python -m pip install --upgrade build
          python -m build --sdist --outdir dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          package_dir: dist
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}