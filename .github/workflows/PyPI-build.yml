name: Build and Upload Wheels

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  build:
    name: Build wheels on ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: pip

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_PLATFORM: ${{ matrix.platform }}
          # Build settings
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_SKIP: "*-win32* *_i686* *musllinux*"
          CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          # C++20 settings (simplified)
          CMAKE_ARGS: "-DCMAKE_CXX_STANDARD=20 -DCMAKE_CXX_STANDARD_REQUIRED=ON"
          # Build dependencies 
          CIBW_BEFORE_BUILD: pip install -U pip wheel scikit-build-core>=0.4.3 pybind11>=2.6.0
          CIBW_TEST_COMMAND: python -c "import VegasAfterglow; print('OK')"
        with:
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}
          path: wheelhouse/
          if-no-files-found: error

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: wheelhouse/

      - name: Gather and publish
        run: |
          pip install --upgrade pip setuptools wheel build twine
          # move wheels into dist/
          mkdir dist
          mv wheelhouse/*.whl dist/
          # build source
          python -m build --sdist -o dist
          # upload sdist + wheels
          twine upload dist/* --skip-existing