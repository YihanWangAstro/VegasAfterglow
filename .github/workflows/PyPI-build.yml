name: Build and Upload Wheels

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools and clean build
        run: |
          pip install --upgrade pip setuptools>=61 wheel cibuildwheel
          rm -rf build dist *.egg-info

      - name: Build wheels (Linux)
        run: cibuildwheel --platform linux --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_SKIP: "*-manylinux_i686 *-musllinux_*"
          # Optimize build speed
          CIBW_ENVIRONMENT: "MAKEFLAGS='-j$(nproc)' CMAKE_BUILD_PARALLEL_LEVEL=$(nproc) SETUPTOOLS_ENABLE_FEATURES=legacy-editable"
          CIBW_BEFORE_BUILD: "pip install ninja && rm -rf {package}/build"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: wheelhouse/

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools and clean build
        run: |
          pip install --upgrade pip setuptools>=61 wheel cibuildwheel
          rm -rf build dist *.egg-info

      - name: Build wheels (macOS)
        run: cibuildwheel --platform macos --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS_MACOS: universal2
          # Optimize build speed
          CIBW_ENVIRONMENT: "MAKEFLAGS='-j3' CMAKE_BUILD_PARALLEL_LEVEL=3 SETUPTOOLS_ENABLE_FEATURES=legacy-editable"
          CIBW_BEFORE_BUILD: "pip install ninja && rm -rf {package}/build"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: wheelhouse/

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools and clean build
        run: |
          python -m pip install --upgrade pip setuptools wheel cibuildwheel
          python -c "import shutil; [shutil.rmtree(p, ignore_errors=True) for p in ['build','dist','VegasAfterglow.egg-info']]"

      - name: Build wheels (Windows)
        run: python -m cibuildwheel --platform windows --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_SKIP: "*-win32"
          # Optimize build speed
          CIBW_ENVIRONMENT: "CMAKE_BUILD_PARALLEL_LEVEL=4 SETUPTOOLS_ENABLE_FEATURES=legacy-editable"
          CIBW_BEFORE_BUILD: "pip install ninja && rd /s /q {package}\\build 2>nul || echo No build directory"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: wheelhouse/

  publish:
    name: Publish to PyPI
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      # 1. Checkout code so build can see pyproject.toml / setup.py
      - uses: actions/checkout@v4

      # 2. Download built wheels into dist/
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux
          path: dist/
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos
          path: dist/
      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows
          path: dist/

      - name: Build source distribution
        run: |
          python -m pip install build
          python -m build --sdist --outdir dist/

      - name: Upload to PyPI
        run: |
          pip install twine==6.0.1
          twine check "dist/*"
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}