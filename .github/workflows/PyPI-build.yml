name: Build and Upload Wheels

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    continue-on-error: false  # or true if you want to tolerate failure
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          pip install cibuildwheel
          cibuildwheel --platform linux --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_SKIP: "*-manylinux_i686"
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: wheelhouse/

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          pip install cibuildwheel
          cibuildwheel --platform macos --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-*"
          CIBW_ARCHS_MACOS: universal2
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: wheelhouse/

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - run: |
          pip install cibuildwheel
          python -m cibuildwheel --platform windows --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-*"
          CIBW_SKIP: "*-win32"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: wheelhouse/

  publish:
    name: Publish to PyPI
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux
          path: dist/
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos
          path: dist/
      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows
          path: dist/
      - name: Upload to PyPI
        run: |
          pip install twine
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}